{"version":3,"sources":["components/Feedback/Feedback.js","components/PageOne/PageOne.js","components/PageTwo/PageTwo.js","components/PageThree/PageThree.js","components/PageFour/PageFour.js","components/Header/Header.js","components/ThankYou/ThankYou.js","components/AdminPage/AdminPage.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["Feedback","clearList","_this","props","dispatch","type","submitFeedback","axios","post","reduxStore","feedbackData","then","response","catch","error","console","log","button","this","feeling","understanding","support","react_default","a","createElement","disabled","onClick","className","comments","Component","connect","PageOne","state","sendToRedux","payload","changeState","event","setState","target","value","onChange","selected","Link","to","components_Feedback_Feedback","withRouter","PageTwo","PageThree","PageFour","placeholder","name","Header","ThankYou","AdminPage","feedback","componentDidMount","getFeedback","get","data","deleteFeedback","completedForm","delete","concat","id","_this2","feedbackRow","map","key","App","components_Header_Header","HashRouter","Route","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","store","createStore","combineReducers","arguments","length","undefined","action","Object","objectSpread","applyMiddleware","logger","ReactDOM","render","es","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2d45f0c9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport './Feedback.css';\n\n\n\nclass Feedback extends Component {\n  \n    clearList = () => {\n        this.props.dispatch({type: 'CLEAR'});\n    }\n\n\n\n    submitFeedback = () => {\n        axios.post('/feedback', this.props.reduxStore.feedbackData)\n        .then(response => {\n            this.clearList();\n        })\n        .catch(error => {\n            console.log('error in post', error);\n        })\n        \n    }\n\n  render() {\n    let button;\n    if(this.props.reduxStore.feedbackData.feeling === 0 || this.props.reduxStore.feedbackData.understanding === 0 || this.props.reduxStore.feedbackData.support === 0){\n        button = <button disabled>Feedback Incomplete</button>\n    } else {\n        button = <button onClick={this.submitFeedback}>Submit Feedback</button>\n    }\n\n    return (\n      <div className=\"App\">\n      <h1>Your Feedback</h1>\n       <ul>\n           <li>Feeling: {this.props.reduxStore.feedbackData.feeling}</li>\n           <li>Understanding: {this.props.reduxStore.feedbackData.understanding}</li>\n           <li>Support: {this.props.reduxStore.feedbackData.support}</li>\n           <li>Comments: {this.props.reduxStore.feedbackData.comments}</li>\n           {button}\n       </ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (reduxStore) => {\n    return {\n        reduxStore\n    }\n}\n\nexport default connect(mapStateToProps)(Feedback);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport Feedback from '../Feedback/Feedback';\n\nclass PageOne extends Component {\n    state = {\n        feeling: 0,\n    }\n\nsendToRedux = () => {\n    //dispatch to redux\n    this.props.dispatch({type: 'ADD_FEELING', payload: this.state.feeling})\n}\n\nchangeState = (event) => {\n    this.setState({\n        feeling: event.target.value,\n    })\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>How are you feeling today?</h1>\n        <select onChange={this.changeState}>\n            <option selected disabled>1 = Terrible, 5 = Great</option>\n            <option value={1}>1</option>\n            <option value={2}>2</option>\n            <option value={3}>3</option>\n            <option value={4}>4</option>\n            <option value={5}>5</option>\n        </select>\n        <button onClick={this.sendToRedux}><Link to=\"/2\">Next</Link></button>\n        <Feedback/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect()(PageOne));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport Feedback from '../Feedback/Feedback';\n\nclass PageTwo extends Component {\n    state = {\n        understanding: 0,\n    }\n    \n    sendToRedux = () => {\n        //dispatch to redux\n        this.props.dispatch({type: 'ADD_UNDERSTANDING', payload: this.state.understanding})\n    }\n\n    changeState = (event) => {\n        this.setState({\n            understanding: event.target.value,\n        })\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>How well are you understanding the content?</h1>\n        <select onChange={this.changeState}>\n            <option selected disabled>1 = Not Well, 5 = Very Well</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n        </select>\n        <button onClick={this.sendToRedux}><Link to=\"/3\">Next</Link></button>\n        <Feedback/>        \n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect()(PageTwo));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport Feedback from '../Feedback/Feedback';\n\nclass PageThree extends Component {\n    state = {\n        support: 0,\n    }\n    \n    sendToRedux = () => {\n        //dispatch to redux\n        this.props.dispatch({type: 'ADD_SUPPORT', payload: this.state.support})\n    }\n\n    changeState = (event) => {\n        this.setState({\n            support: event.target.value,\n        })\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>How well are you being supported?</h1>\n        <select onChange={this.changeState}>\n            <option selected disabled>1 = Not at all, 5 = Very Well</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n        </select>\n        <button onClick={this.sendToRedux}><Link to=\"/4\">Next</Link></button>\n        <Feedback/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect()(PageThree));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport Feedback from '../Feedback/Feedback';\n\nclass PageFour extends Component {\n    state = {\n        comments: '',\n    }\n    \n    sendToRedux = () => {\n        //dispatch to redux\n        this.props.dispatch({type: 'ADD_COMMENTS', payload: this.state.comments})\n    }\n\n    changeState = (event) => {\n        this.setState({\n            comments: event.target.value,\n        })\n    }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Do you have any additional comments?</h1>\n            <input onChange={this.changeState} type=\"text\" placeholder=\"Any comments?\" name=\"comments\"/>\n        <button onClick={this.sendToRedux}><Link to=\"/5\">Finish</Link></button>\n        <Feedback/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect()(PageFour));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Feedback!</h1>\n          <h4><i>Don't forget it!</i></h4>\n        </header>\n        <br/>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Header);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Feedback from '../Feedback/Feedback';\n\n\n\n\nclass ThankYou extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Thanks for the feedback!</h1>\n        <Feedback/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect()(ThankYou));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\n\nclass AdminPage extends Component {\n    state = {\n        feedback: [],\n    };\n\n    componentDidMount = () => {\n        this.getFeedback();\n    }\n\n    getFeedback = () => {\n        axios.get('/feedback')\n        .then(response => {\n            this.setState({\n                feedback: response.data\n            })\n        })\n        .catch(error => {\n            console.log('Error in get:', error);\n        })\n    }\n\n    deleteFeedback = (completedForm) => {\n        axios.delete(`/feedback/${completedForm.id}`)\n        .then(response => {\n            this.getFeedback();\n        })\n        .catch(error => {\n            console.log('Error in delete', error);\n        })\n    }\n\n  render() {\n    let feedbackRow = this.state.feedback.map(completedForm => {\n        return <tr key={completedForm.id}>\n        <td>{completedForm.feeling}</td>\n        <td>{completedForm.understanding}</td>\n        <td>{completedForm.support}</td>\n        <td>{completedForm.comments}</td>\n        <td><button onClick={() => this.deleteFeedback(completedForm)}>X</button></td>\n        </tr>\n    });\n    return (\n        <div>\n            <table>\n                <thead>\n                    <th>Feeling:</th>\n                    <th>Understanding:</th>\n                    <th>Support:</th>\n                    <th>Comments:</th>\n                    <th>Delete</th>\n                </thead>\n                <tbody>\n                    {feedbackRow}\n                </tbody>\n            </table>\n        </div>\n    );\n  }\n}\nconst mapStateToProps = (reduxStore) => {\n    return {\n        reduxStore\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AdminPage));","import React, { Component } from 'react';\nimport './App.css';\nimport Feedback from '../Feedback/Feedback';\nimport PageOne from '../PageOne/PageOne';\nimport PageTwo from '../PageTwo/PageTwo';\nimport PageThree from '../PageThree/PageThree';\nimport PageFour from '../PageFour/PageFour';\nimport Header from '../Header/Header';\nimport {HashRouter as Router, Route, Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport ThankYou from '../ThankYou/ThankYou';\nimport AdminPage from '../AdminPage/AdminPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Router>\n          <div>\n            <Route path=\"/1\" component={PageOne}/>\n            <Route path=\"/2\" component={PageTwo}/>\n            <Route path=\"/3\" component={PageThree}/>\n            <Route path=\"/4\" component={PageFour}/>\n            <Route path=\"/5\" component={ThankYou}/>\n            <Route path=\"/admin\" component={AdminPage}/>\n            <button><Link to=\"/1\">New Feedback</Link></button>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default connect()(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {createStore , combineReducers, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux'; \nimport logger from 'redux-logger';\n\nconst feedbackData = (state = {feeling: 0, understanding: 0, support: 0, comments: ''}, action) => {\n    switch(action.type){\n        case 'ADD_FEELING':\n        return {\n            ...state, \n            feeling: action.payload\n        };\n        case 'ADD_UNDERSTANDING':\n        return {\n            ...state, \n            understanding: action.payload\n        };\n        case 'ADD_SUPPORT':\n        return {\n            ...state, \n            support: action.payload\n        };\n        case 'ADD_COMMENTS':\n        return {\n            ...state, \n            comments: action.payload\n        };\n        case 'GET_FEEDBACK':\n        return action.payload;\n        case 'CLEAR':\n        return state = {feeling: 0, understanding: 0, support: 0, comments: ''};\n        default:\n        return state;\n    }\n}\n\n\n\n\nconst store = createStore(\n    combineReducers({\n        feedbackData\n    }),\n    applyMiddleware(logger)\n)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}